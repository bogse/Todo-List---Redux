{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // const [todoList, setTodoList] = useState([])\n// setTodoList(action)\n\nconst initialState = {\n  todoList: []\n};\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    saveTodo: (state, action) => {\n      state.todoList.push(action.payload);\n    },\n    setCheck: (state, action) => {\n      state.todoList.map(item => {\n        if (action.payload === item.id) {\n          if (item.done === true) {\n            item.done = false;\n          } else {\n            item.done = true;\n          }\n        }\n      });\n    },\n    setRemove: (state, action) => {\n      const index = state.todoList.findIndex(todo => todo === action.payload);\n      state.todoList.splice(index, 1);\n    }\n  }\n});\nexport const {\n  saveTodo,\n  setCheck,\n  setRemove\n} = todoSlice.actions;\nexport const selectTodoList = state => state.todos.todoList;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["D:/projects/todo-redux/src/features/todoSlice.js"],"names":["createSlice","initialState","todoList","todoSlice","name","reducers","saveTodo","state","action","push","payload","setCheck","map","item","id","done","setRemove","index","findIndex","todo","splice","actions","selectTodoList","todos","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC1BI,EAAAA,IAAI,EAAE,OADoB;AAE1BH,EAAAA,YAF0B;AAG1BI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACH,KAHK;AAKNC,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACL,QAAN,CAAeU,GAAf,CAAmBC,IAAI,IAAI;AACvB,YAAIL,MAAM,CAACE,OAAP,KAAmBG,IAAI,CAACC,EAA5B,EAAgC;AAC9B,cAAID,IAAI,CAACE,IAAL,KAAc,IAAlB,EAAwB;AACpBF,YAAAA,IAAI,CAACE,IAAL,GAAY,KAAZ;AACH,WAFD,MAEQ;AACJF,YAAAA,IAAI,CAACE,IAAL,GAAY,IAAZ;AACH;AACF;AACJ,OARD;AASH,KAfK;AAiBNC,IAAAA,SAAS,EAAE,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC1B,YAAMS,KAAK,GAAGV,KAAK,CAACL,QAAN,CAAegB,SAAf,CAA0BC,IAAD,IAAUA,IAAI,KAAKX,MAAM,CAACE,OAAnD,CAAd;AACAH,MAAAA,KAAK,CAACL,QAAN,CAAekB,MAAf,CAAsBH,KAAtB,EAA6B,CAA7B;AACH;AApBK;AAHgB,CAAD,CAA7B;AA2BA,OAAO,MAAM;AAAEX,EAAAA,QAAF;AAAYK,EAAAA,QAAZ;AAAsBK,EAAAA;AAAtB,IAAoCb,SAAS,CAACkB,OAApD;AAEP,OAAO,MAAMC,cAAc,GAAGf,KAAK,IAAIA,KAAK,CAACgB,KAAN,CAAYrB,QAA5C;AAEP,eAAeC,SAAS,CAACqB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n// const [todoList, setTodoList] = useState([])\r\n// setTodoList(action)\r\nconst initialState = {\r\n    todoList: []\r\n}\r\n\r\nconst todoSlice = createSlice({\r\n    name: 'todos',\r\n    initialState,\r\n    reducers: {\r\n        saveTodo: (state, action) => {\r\n            state.todoList.push(action.payload)\r\n        },\r\n\r\n        setCheck: (state, action) => {\r\n            state.todoList.map(item => {\r\n                if (action.payload === item.id) {\r\n                  if (item.done === true) {\r\n                      item.done = false\r\n                  } else  {\r\n                      item.done = true\r\n                  }\r\n                }\r\n            })\r\n        },\r\n        \r\n        setRemove: (state, action) => {\r\n            const index = state.todoList.findIndex((todo) => todo === action.payload);\r\n            state.todoList.splice(index, 1);\r\n        }\r\n    }\r\n});\r\n\r\nexport const { saveTodo, setCheck, setRemove } = todoSlice.actions\r\n\r\nexport const selectTodoList = state => state.todos.todoList\r\n\r\nexport default todoSlice.reducer"]},"metadata":{},"sourceType":"module"}